{"version":3,"sources":["containers/Home.js","actions/types.js","containers/Login.js","actions/auth.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Activate.js","containers/Signup.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","connect","login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","type","payload","data","localStorage","getItem","get","useState","formData","setFormData","onChange","e","target","name","value","className","onSubmit","preventDefault","placeholder","required","minLength","to","ResetPassword","ResetPasswordConfirm","Activate","Signup","Navbar","Layout","props","childern","initialState","access","refresh","isAuthenticated","user","combineReducers","auth","state","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8740d618.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\n\r\nconst Home = () => (\r\n    <div>\r\n        Home\r\n    </div>\r\n);\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS ';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ login }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '' \r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n//const mapStateToProps = state => ({\r\n  //  isAuthenticated: state.auth.isAuthenticated\r\n//});\r\n\r\nexport default connect(null , { login})(Login);","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from './types';\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        }; \r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n","import React from 'react';\r\n\r\nconst ResetPassword = () => (\r\n    <div>\r\n        ResetPassword\r\n    </div>\r\n);\r\n\r\nexport default ResetPassword;","import React from 'react';\r\n\r\nconst ResetPasswordConfirm = () => (\r\n    <div>\r\n        ResetPasswordConfirm\r\n    </div>\r\n);\r\n\r\nexport default ResetPasswordConfirm;","import React from 'react';\r\n\r\nconst Activate = () => (\r\n    <div>\r\n        Activate\r\n    </div>\r\n);\r\n\r\nexport default Activate;","import React from 'react';\r\n\r\nconst Signup = () => (\r\n    <div>\r\n        Signup\r\n    </div>\r\n);\r\n\r\nexport default Signup;","import React  from 'react';\r\n\r\nconst Navbar = () => (\r\n    <div>\r\n        Navbar\r\n    </div>\r\n);\r\n\r\nexport default Navbar;","import React   from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst Layout = (props) => (\r\n    <div>\r\n        <Navbar />\r\n        {props.childern}\r\n    </div>\r\n);\r\n\r\n\r\nexport default Layout;","import {\r\n      LOGIN_SUCCESS,\r\n      LOGIN_FAIL,\r\n      USER_LOADED_SUCCESS,\r\n      USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            // localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    user: payload\r\n                }\r\n        case USER_LOADED_FAIL:\r\n                    return {\r\n                        ...state,\r\n                        user: null\r\n                    }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { BrowserRouter as Router , Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport Activate from './containers/Activate';\r\nimport Signup from './containers/Signup';\r\nimport Layout from './hocs/Layout';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact  path='/login' component={Login} />\r\n                    <Route exact path='/signup' component={Signup} />\r\n                    <Route exact path='/reset-password' component={ResetPassword} />\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\r\n                </Switch>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}